bot:
  token: 6666866418:AAFe1UyRicd_jFhpadlh8Qp3bMCwxTx3Q4k
  name: FintrackAPIBot

spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    dead_letter_topic: notification-retry


  datasource:
    url: jdbc:postgresql://localhost:5432/demo_telegram_bot
    username: postgres
    password: krya
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8443/auth/realms/client_user
          jwk-set-uri: http://localhost:8443/auth/realms/client_user/protocol/openid-connect/certs
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

keycloak:
  realm: client_user
  resource: client-user-app
  #  auth-server-url: https://demo.docengine.tech/auth/ #docker container
  auth-server-url: http://localhost:8443/auth/ #docker container
  credentials:
    username: 'admin'
    password: 'admin'
    client-id: 'client-user-app' # admin account for creating users
    secret: 'kdV1S5gjjriGOK1wUXGoooGRUHUdIFgf'
    provider: secret

  grant-type: password
  tokenUrl: http://localhost:8443/auth/realms/client_user/protocol/openid-connect/token

server:
  port: 8082

kafka:
  group-id: notification-consumer