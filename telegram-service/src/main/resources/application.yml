bot:
  token: 6666866418:AAELLoneNBLB1rlW85dttCHw_KCMTPgXlro
  name: FintrackAPIBot
server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/demo_telegram_bot
    username: postgres
    password: krya
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8443/auth/realms/Fintrack
          jwk-set-uri: http://localhost:8443/auth/realms/Fintrack/protocol/openid-connect/certs
  jpa:
    hibernate:
      ddl-auto: update # Set this to "update" to automatically create/update the database schema
    show-sql: true # Set this to true to see SQL queries in the console for debugging
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    dead_letter_topic: notification-retry

keycloak:
  realm: Fintrack
  resource: fintrack-app
  #  auth-server-url: https://demo.docengine.tech/auth/ #docker container
  auth-server-url: http://localhost:8443/auth/ #docker container
  credentials:
    username: 'admin'
    password: 'admin'
    client-id: 'fintrack-app' # admin account for creating users
    secret: '0dxOe3iyxaTdtZ9vkpAHTudJOcaVSmjK'
    provider: secret

  grant-type: password
  tokenUrl: http://localhost:8443/auth/realms/Fintrack/protocol/openid-connect/token