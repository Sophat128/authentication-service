

spring:

  application:
    name: notification-service

#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8443/auth/realms/Fintrack
#          jwk-set-uri: http://localhost:8443/auth/realms/Fintrack/protocol/openid-connect/certs

  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    dead_letter_topic: notification-retry


    topic:
      name: notification

    bootstrap-servers: localhost:9092

  datasource:
    url: jdbc:postgresql://34.142.208.161:2345/fintrack_db
    username: postgres
    password: 1234
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

#hibernate:
#  jdbc:
logging:
  level:
    com.levi.testhibernate: debug
#    batch_size: 1
kafka:
  group-id: hero-consumer
  auto-offset: earliest
  topics:
    data: notification

